<h1 class="text-center mt-5">Authenticate with Web eID</h1>
<p class="text-center mt-5"><button type="button" class="btn btn-lg btn-primary" id="webeid-auth-button">Authenticate</button></p>

<div id="error-message">
    <div class="message"></div>
    <div class="details"></div>
</div>

<script type="module">
    "use strict";
    import * as webeid from "./js/web-eid.js";
    import {
        hideErrorMessage,
        showErrorMessage,
        checkHttpError
    } from "./js/errors.js";

    hideErrorMessage();

    const authButton = document.querySelector("#webeid-auth-button");

    const csrfToken = document.querySelector('#csrftoken').content;

    const lang = new URLSearchParams(window.location.search).get("lang") || "en";

    authButton.addEventListener("click", async () => {
        hideErrorMessage();
        authButton.disabled = true;

        try {
            const challengeResponse = await fetch("./nonce", {
                method: "GET",
                headers: {
                    "Content-Type": "application/json"
                }
            });
            await checkHttpError(challengeResponse);
            const {
                nonce
            } = await challengeResponse.json();

            const authToken = await webeid.authenticate(nonce, {
                lang
            });

            const authTokenResponse = await fetch("./validate", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json",
                    "X-CSRF-TOKEN": csrfToken
                },
                body: `${JSON.stringify(authToken)}`
            });
            await checkHttpError(authTokenResponse);
            const authTokenResult = await authTokenResponse.json();

            console.log("Authentication successful! Result:", authTokenResult);

            window.location.href = "/welcome";

        } catch (error) {
            showErrorMessage(error);
            // Log extension error
            let formData = new FormData();
            formData.append("code", error.code);
            fetch("./logger", {method: "POST", body: formData});
            throw error;
        } finally {
            authButton.disabled = false;
        }
    });

    //# sourceURL=index.js
</script>